{"ast":null,"code":"import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\ni18n // detect user language\n// learn more: https://github.com/i18next/i18next-browser-languageDetector\n.use(LanguageDetector) // pass the i18n instance to react-i18next.\n.use(initReactI18next) // init i18next\n// for all options read: https://www.i18next.com/overview/configuration-options\n.init({\n  debug: true,\n  fallbackLng: 'pt',\n  interpolation: {\n    escapeValue: false // not needed for react as it escapes by default\n\n  },\n  resources: {\n    en: {\n      translation: {\n        appPageTexts: {\n          part1: \"...em Português, por favor!\",\n          part2: 'Another english text!',\n          part3: 'Search',\n          part4: 'Logout',\n          part5: 'Search',\n          part6: 'Cataloging',\n          part7: 'About',\n          part8: 'Testes'\n        },\n        about: {\n          paragraph01: 'BiblioPDF is a React/Java web application that allows you to manage electronic bibliographic resources such as papers, books, and even code.',\n          paragraph02: 'The frontend will be built with REACT, while the backend will be a RESTful API built with Spring (a Java backend framework) and Spring-JPA on PostgreSQL.',\n          paragraph03: 'The development process is built on Gitlab (free tier) and follows a continuous integration and continuous deployment (CI/CD) methodology that includes automated testing.',\n          paragraph04: 'The deployment will take place in the cloud (AWS or another provider) or on a traditional provider like Digital Ocean using Docker.',\n          paragraph05: 'Although this software should be useful, it will mostly act as a demonstration of technology.',\n          paragraph06: 'Jorge L.S. Leão (jorge.leao@ufrj.br, solo for the time being) is leading the project.',\n          paragraph07a: 'The software will be available as a free download (',\n          paragraph07b: ').',\n          paragraph08: 'The project started on january 27th, 2022. It has not yet produced a working version nor been deployed.'\n        }\n      }\n    },\n    pt: {\n      translation: {\n        appPageTexts: {\n          part1: \"...in English, please!\",\n          part2: 'Outro texto em Português!',\n          part3: 'Busca',\n          part4: 'Sair',\n          part5: 'Busca',\n          part6: 'Catalogação',\n          part7: 'Sobre',\n          part8: 'Testes'\n        },\n        about: {\n          paragraph01: 'BiblioPDF é uma aplicação React/Java para armazenar, buscar e recuperar materiais bibliográficos eletrônicos, como papers, livros e até código de programas de computador',\n          paragraph02: 'O frontend vai ser desenvolvido em REACT e o backend vai ser, na sua versão final, uma implementação de uma API REST em Spring,' + ' (um framework Java para backend), com SpringJPA e PostgreSQL.',\n          paragraph03: 'O processo de desenvolvimento está sendo feito com o Gitlab (free tier) com uma disciplina de CI/CD que inclui testes automatizados.',\n          paragraph04: 'A implantação será feita em um serviço de cloud (AWS ou outro) ou em um sistema como o Docker num provedor tradicional como o Digital Ocean.',\n          paragraph05: 'Embora esta aplicação seja útil por si mesma, ela deve servir sobretudo como uma demonstração das tecnologias mencionadas acima.',\n          paragraph06: 'O projeto está sendo conduzido por Jorge L.S.Leão (jorge.leao@ufrj.br, sozinho por enquanto).',\n          paragraph07a: 'O software será disponibilizado como um software de código aberto e gratuito (',\n          paragraph07b: ').',\n          paragraph08: 'O projeto iniciou-se em 27 de janeiro de 2022. Ele ainda não produziu uma versão funcional nem foi implantado.'\n        }\n      }\n    }\n  }\n});\nexport default i18n;","map":{"version":3,"sources":["/home/jorge/Documents/PROJECT.MYLIB/mylib/mylib/src/i18n.js"],"names":["i18n","initReactI18next","LanguageDetector","use","init","debug","fallbackLng","interpolation","escapeValue","resources","en","translation","appPageTexts","part1","part2","part3","part4","part5","part6","part7","part8","about","paragraph01","paragraph02","paragraph03","paragraph04","paragraph05","paragraph06","paragraph07a","paragraph07b","paragraph08","pt"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AAEAF,IAAI,CACF;AACA;AAFE,CAGDG,GAHH,CAGOD,gBAHP,EAIE;AAJF,CAKGC,GALH,CAKOF,gBALP,EAME;AACA;AAPF,CAQGG,IARH,CAQQ;AACJC,EAAAA,KAAK,EAAE,IADH;AAEJC,EAAAA,WAAW,EAAE,IAFT;AAGJC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE,KADA,CACO;;AADP,GAHX;AAMJC,EAAAA,SAAS,EAAE;AACTC,IAAAA,EAAE,EAAE;AACFC,MAAAA,WAAW,EAAE;AACTC,QAAAA,YAAY,EAAE;AACVC,UAAAA,KAAK,EAAE,6BADG;AAEVC,UAAAA,KAAK,EAAE,uBAFG;AAGVC,UAAAA,KAAK,EAAE,QAHG;AAIVC,UAAAA,KAAK,EAAE,QAJG;AAKVC,UAAAA,KAAK,EAAE,QALG;AAMVC,UAAAA,KAAK,EAAE,YANG;AAOVC,UAAAA,KAAK,EAAE,OAPG;AAQVC,UAAAA,KAAK,EAAE;AARG,SADL;AAWTC,QAAAA,KAAK,EAAC;AACJC,UAAAA,WAAW,EAAE,8IADT;AAEJC,UAAAA,WAAW,EAAE,2JAFT;AAGJC,UAAAA,WAAW,EAAE,4KAHT;AAIJC,UAAAA,WAAW,EAAE,qIAJT;AAKJC,UAAAA,WAAW,EAAE,+FALT;AAMJC,UAAAA,WAAW,EAAE,uFANT;AAOJC,UAAAA,YAAY,EAAE,qDAPV;AAQJC,UAAAA,YAAY,EAAE,IARV;AASJC,UAAAA,WAAW,EAAE;AATT;AAXG;AADX,KADK;AA0BTC,IAAAA,EAAE,EAAC;AACCpB,MAAAA,WAAW,EAAC;AACVC,QAAAA,YAAY,EAAE;AACVC,UAAAA,KAAK,EAAE,wBADG;AAEVC,UAAAA,KAAK,EAAE,2BAFG;AAGVC,UAAAA,KAAK,EAAE,OAHG;AAIVC,UAAAA,KAAK,EAAE,MAJG;AAKVC,UAAAA,KAAK,EAAE,OALG;AAMVC,UAAAA,KAAK,EAAE,aANG;AAOVC,UAAAA,KAAK,EAAE,OAPG;AAQVC,UAAAA,KAAK,EAAE;AARG,SADJ;AAWVC,QAAAA,KAAK,EAAE;AACLC,UAAAA,WAAW,EAAE,2KADR;AAELC,UAAAA,WAAW,EAAE,oIACC,gEAHT;AAILC,UAAAA,WAAW,EAAE,sIAJR;AAKLC,UAAAA,WAAW,EAAE,8IALR;AAMLC,UAAAA,WAAW,EAAE,kIANR;AAOLC,UAAAA,WAAW,EAAE,+FAPR;AAQLC,UAAAA,YAAY,EAAE,gFART;AASLC,UAAAA,YAAY,EAAE,IATT;AAULC,UAAAA,WAAW,EAAE;AAVR;AAXG;AADb;AA1BM;AANP,CARR;AAqEA,eAAe9B,IAAf","sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\ni18n\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    debug: true,\n    fallbackLng: 'pt',\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n    resources: {\n      en: {\n        translation: {\n            appPageTexts: {\n                part1: \"...em Português, por favor!\",\n                part2: 'Another english text!',\n                part3: 'Search',\n                part4: 'Logout',\n                part5: 'Search',\n                part6: 'Cataloging',\n                part7: 'About',\n                part8: 'Testes',\n              },\n            about:{\n              paragraph01: 'BiblioPDF is a React/Java web application that allows you to manage electronic bibliographic resources such as papers, books, and even code.',  \n              paragraph02: 'The frontend will be built with REACT, while the backend will be a RESTful API built with Spring (a Java backend framework) and Spring-JPA on PostgreSQL.',  \n              paragraph03: 'The development process is built on Gitlab (free tier) and follows a continuous integration and continuous deployment (CI/CD) methodology that includes automated testing.',  \n              paragraph04: 'The deployment will take place in the cloud (AWS or another provider) or on a traditional provider like Digital Ocean using Docker.',  \n              paragraph05: 'Although this software should be useful, it will mostly act as a demonstration of technology.',  \n              paragraph06: 'Jorge L.S. Leão (jorge.leao@ufrj.br, solo for the time being) is leading the project.',  \n              paragraph07a: 'The software will be available as a free download (',\n              paragraph07b: ').',\n              paragraph08: 'The project started on january 27th, 2022. It has not yet produced a working version nor been deployed.'\n            }  \n        }\n      },\n      pt:{\n          translation:{\n            appPageTexts: {\n                part1: \"...in English, please!\",\n                part2: 'Outro texto em Português!',\n                part3: 'Busca',\n                part4: 'Sair',\n                part5: 'Busca',\n                part6: 'Catalogação',\n                part7: 'Sobre',\n                part8: 'Testes',\n            },\n            about: {\n              paragraph01: 'BiblioPDF é uma aplicação React/Java para armazenar, buscar e recuperar materiais bibliográficos eletrônicos, como papers, livros e até código de programas de computador',  \n              paragraph02: 'O frontend vai ser desenvolvido em REACT e o backend vai ser, na sua versão final, uma implementação de uma API REST em Spring,'+\n                            ' (um framework Java para backend), com SpringJPA e PostgreSQL.',  \n              paragraph03: 'O processo de desenvolvimento está sendo feito com o Gitlab (free tier) com uma disciplina de CI/CD que inclui testes automatizados.',  \n              paragraph04: 'A implantação será feita em um serviço de cloud (AWS ou outro) ou em um sistema como o Docker num provedor tradicional como o Digital Ocean.',  \n              paragraph05: 'Embora esta aplicação seja útil por si mesma, ela deve servir sobretudo como uma demonstração das tecnologias mencionadas acima.',  \n              paragraph06: 'O projeto está sendo conduzido por Jorge L.S.Leão (jorge.leao@ufrj.br, sozinho por enquanto).',  \n              paragraph07a: 'O software será disponibilizado como um software de código aberto e gratuito (',\n              paragraph07b: ').',\n              paragraph08: 'O projeto iniciou-se em 27 de janeiro de 2022. Ele ainda não produziu uma versão funcional nem foi implantado.'\n            }\n          }\n      }\n    }\n  });\n\nexport default i18n;\n"]},"metadata":{},"sourceType":"module"}